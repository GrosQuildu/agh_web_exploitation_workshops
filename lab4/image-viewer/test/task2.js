var supertest = require("supertest");
var chai = require('chai');
chai.use(require('chai-json'));

let address = process.env.ADDRESS || "http://localhost:3000/";
var server = supertest.agent(address);
var expect = chai.expect;

describe('task2 solve', function() {
    it('returns the flag', function(done) {
       server
       .post('/task2')
       .type('form')
       .set("X-Task", 2)
       .send({"url": "http://0177.0.0.1:8888"})
       .expect('Content-Type', /html/)
       .expect(200)
       .end((err, res) => {
           expect(res.text).to.include("jctf{");
           done();
       });
    });
});


describe('task2 filters', function() {
    it('does not allow file protocol ', function(done) {
       server
       .post('/task2')
       .type('form')
       .set("X-Task", 2)
       .send({"url": "file:///etc/passwd"})
       .end((err, res) => {
           expect(res.status).to.equal(403);
           done();
       });
    });

    it('does not allow ipv6 ', function(done) {
        server
        .post('/task2')
        .type('form')
        .set("X-Task", 2)
        .send({"url": "http://0:0:0:0:0:0:8888"})
        .end((err, res) => {
            expect(res.status).to.equal(403);
            done();
        });
     });

    it('does not allow ipv6 ', function(done) {
        server
        .post('/task2')
        .type('form')
        .set("X-Task", 2)
        .send({"url": "http://0000::1:8888"})
        .end((err, res) => {
            expect(res.status).to.equal(403);
            done();
        });
     });

     it('does not allow @ ', function(done) {
        server
        .post('/task2')
        .type('form')
        .set("X-Task", 2)
        .send({"url": "http://1.2.3.4@127.0.0.1:8888"})
        .end((err, res) => {
            expect(res.status).to.equal(403);
            done();
        });
     });

     it('does not allow domains', function(done) {
        server
        .post('/task2')
        .type('form')
        .set("X-Task", 2)
        .send({"url": "http://abc.127.0.0.1.nip.io:8888"})
        .end((err, res) => {
            expect(res.status).to.equal(403);
            done();
        });
     });

     it('does not allow "localhost"', function(done) {
        server
        .post('/task2')
        .type('form')
        .set("X-Task", 2)
        .send({"url": "http://localhost:8888"})
        .end((err, res) => {
            expect(res.status).to.equal(403);
            done();
        });
     });


     it('does not allow decimal ips', function(done) {
        server
        .post('/task2')
        .type('form')
        .set("X-Task", 2)
        .send({"url": "http://2130706433:8888"})
        .end((err, res) => {
            expect(res.status).to.equal(403);
            done();
        });
     });

     it('does allow google.com', function(done) {
        server
        .post('/task2')
        .type('form')
        .set("X-Task", 2)
        .send({"url": "https://google.com/"})
        .end((err, res) => {
            expect(res.status).to.equal(200);
            done();
        });
     }).timeout(10000);

     it('does allow imgur.com', function(done) {
        server
        .post('/task2')
        .type('form')
        .set("X-Task", 2)
        .send({"url": "https://google.com/"})
        .end((err, res) => {
            expect(res.status).to.equal(200);
            done();
        });
     }).timeout(10000);
});