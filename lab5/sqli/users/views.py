from django.http import HttpResponse
from django.db import IntegrityError, transaction
from time import sleep

from django.urls import reverse
from django.shortcuts import redirect
from django.utils.html import format_html

from users.models import User, Secret
from django.contrib.auth import logout as logout_user, login as login_user 


def index(request):
    user = getattr(request, "user")
    response = format_html('Welcome unknown.<br/>' \
               'Login <a href="{}?username=admin&password=admin">here</a>.<br/>' \
               'Or register <a href="{}?username=admin&password=admin">here</a>.<br/>' \
               'Or see sources <a href="{}?show">here</a>.',
                reverse('login'), reverse('register'), reverse('index'))

    if 'show' in request.GET:
        with open(__file__) as f:
            source = f.read()
        response = format_html('<html><body><pre>{}</pre></body></html>', source)
        return HttpResponse(response)

    if not user.is_authenticated:
        return HttpResponse(response)

    secret = request.user.secret
    new_secret = request.GET.get("secret", "")
    if len(new_secret) != 0:
        secret.content = new_secret
        secret.save()
        response = 'Secret updated'
        return HttpResponse(response)

    response = format_html('Welcome {}<br/>', request.user.username)
    if str(request.user.secret) != '':
        response += format_html('Your secret is: {}', request.user.secret)
    else:
        response += 'To set your secret add "?secret=your_secret"'

    response += format_html('<br/>Logout <a href="{}">here</a>.', reverse('logout'))

    return HttpResponse(response)


def login(request):
    user = getattr(request, "user")
    if user.is_authenticated:
        return redirect("index")

    username = request.GET.get("username", "")
    password = request.GET.get("password", "")

    try:
        user = User.objects.raw("SELECT * FROM users_user WHERE username='%s' and password='%s' LIMIT 1" % (username, password))[0]
    except Exception as e:
        response = format_html("Login failed: {}", e)
        return HttpResponse(response)

    # disable login!
    # if user:
    #     login_user(request, user)

    return redirect("index")


def register(request):
    username = request.GET.get("username", "")
    password = request.GET.get("password", "")
    params_ok = True
    if len(username) == 0:
        response = "Gimme username<br/>"
        params_ok = False
    if len(password) == 0:
        response = "Gimme password<br/>"
        params_ok = False

    if params_ok:
        try:
            with transaction.atomic():
                secret = Secret.objects.create()
                User.objects.create(username=username, password=password, secret=secret)
                response = "User created"
        except Exception as e:
            response = format_html("Error creating: {}", e)

    return HttpResponse(response)


def logout(request):
    logout_user(request)
    return redirect('index')
