const express = require('express')
const path = require("path");
const mkdirp = require("mkdirp");
const app = express()
const port = 3000

app.set("views", path.join(__dirname, "views"));
app.set("view engine", "pug");
app.use(express.static(path.join(__dirname, "public")));

mkdirp.sync('public/uploads/')

var mime = {
    html: 'text/html',
    txt: 'text/plain',
    css: 'text/css',
    gif: 'image/gif',
    jpg: 'image/jpeg',
    png: 'image/png',
    svg: 'image/svg+xml',
    js: 'application/javascript'
};

var multer  = require('multer');
var storage = multer.diskStorage({
    destination: function (req, file, cb) {
        cb(null, 'public/uploads/')
    },
    filename: function (req, file, cb) {
        cb(null, file.originalname)
    }
})
var upload = multer({ storage: storage, fileFilter: function (req, file, cb) {
        var extension = file.mimetype;
        if (extension !== 'application/zip') {
            return cb(new Error('Only zips are allowed'))
        }
        cb(null, true)
    }
})

app.get('/', (req, res) => {
	res.render("index", {Title: "AGHWS"});
})

app.get('/task1', (req, res) => {
	res.render("task", {Title: "AGHWS", First: "/task1/cat?filename=1.jpg", Second:"/task1/cat?filename=2.jpg", Third: "/task1/cat?filename=3.jpg"});
})

app.get('/task2', (req, res) => {
	//jctf{flag_should_be_here}
	res.render("task", {Title: "AGHWS", First: "/task2/cat?filename=1.jpg", Second:"/task2/cat?filename=2.jpg", Third: "/task2/cat?filename=3.jpg"});
})

app.get('/task3', (req, res) => {
	res.render("form", {Title: "AGHWS"});
})

app.post('/task3', upload.single('zipupload'),(req, res, next) => {
  var fs = require('fs')
  var extractzip = require('extract-zip')
  extractzip(req.file.path, {dir: path.resolve('public/uploads/')},function (err){
     next(err)
  })
  //var zipEntries = zip.getEntries();
  //zipEntries.forEach(function(zipEntry) {
  //  console.log(zipEntry.toString());
  //});
  //fs.createReadStream(req.file.path).pipe(unzip.Extract({path: 'public/uploads/'}));
    result = {
        file:req.file,
        message:"File has been extracted"
    };
    //fs.unlink(req.file.path, function (e) {
    //    if (e) throw e;
    //    console.log('successfully deleted '+req.file.path);
    //});
    res.end(JSON.stringify(result));
})

app.get('/task4', (req, res) => {
	res.render("form", {Title: "AGHWS"});
})

app.post('/task4', (req, res) => {
	res.send("File uploaded!");
})

app.get('/task1/cat', (req, res, next) => {
	var fs = require('fs')
	var filename = req.query.filename
	if(filename.includes('.js')) filename = '1.jpg'
	var type = mime[filename.split('.').pop()] || 'text/plain';
	res.setHeader('Content-Type', type);
	fs.readFile('images/'+filename, function(err, data){
	    	if(err){
			 next(err)
		} else {
			res.send(data)
		}
	});
})

app.get('/task2/cat', (req, res, next) => {
	var fs = require('fs')
	var filename = req.query.filename.replace(/\.\.\//g,'')
	var type = mime[filename.split('.').pop()] || 'text/plain';
	res.setHeader('Content-Type', type);
	fs.readFile('images/'+filename, function(err, data){
	    	if(err){
			 next(err)
		} else {
			res.send(data)
		}
	});
})

app.listen(port, () => console.log(`App listening on port ${port}!`))
