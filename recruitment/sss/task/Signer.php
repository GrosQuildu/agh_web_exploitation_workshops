<?php

class Signer {

    public $p;
    public $q;
    public $g;
    public $x;
    public $y;

    public function __construct() {
        $this->p = gmp_init("89884656743115936844939593180870857739232425794841089338845261641396332950963295380180211946090542282273025524424700548821626257515929622207512612746958652816973477901613148063184050133646740412530094257865411300824346377423873218727520657984013457080878843782496235595478640350157588334503674012221735188053");
        $this->q = gmp_init("1354323932211324754552588429096391824916942809081");
        $this->g = gmp_init("61752264502744934876812687130589178814576976380065284488624787034081375154615729660987139577512902236197301228769878073835388841992441344002638450979834078347992196784064935397549679533506154931964723846184842934657476032237111841933210136751989559537573489763015731724382677173180416703760247354194569484224");

        // the flag is encoded as a number
        // decode it like hex(flag).lstrip('0x').rstrip('L').decode('hex') in python2
        $this->x = gmp_init(file_get_contents(dirname(__FILE__)."/secrets/flag1.txt"));
        $this->y = gmp_powm($this->g, $this->x, $this->p);

    }

    public function sign($m) {
        $p = $this->p;
        $q = $this->q;
        $x = $this->x;
        $g = $this->g;
        $yo = gmp_mod(gmp_powm($g, gmp_init($this->red($m)), $p), $q);
        $lo = gmp_mod(gmp_mul(gmp_invert(gmp_init($this->red($m)), $q), gmp_add(gmp_init(hash("sha1", $m), 16), gmp_mul($x, $yo))), $q);

        return $yo.".".$lo;
    }

    public function verify($m ,$sig) {
        $p = $this->p;
        $q = $this->q;
        $y = $this->y;
        $g = $this->g;
        list($yo, $lo) = explode(".", $sig);
        $yo = gmp_init($yo);
        $lo = gmp_init($lo);

        $foo = gmp_mod(gmp_mul(gmp_init(hash("sha1", $m), 16), gmp_invert($lo, $q)), $q);
        $bar = gmp_mod(gmp_mul($yo, gmp_invert($lo, $q)), $q);
        $v = gmp_mod(gmp_mod(gmp_mul(gmp_powm($g,$foo,$p),gmp_powm($y,$bar,$p)), $p), $q);

        return !gmp_cmp($v,$yo);
    }

    private function red($m) {
        $x = 13377331;
        for ($i = 0; $i < strlen($m); $i++) {
            $x = 7*($x << 1 | $x >> 31);
            $x ^= ord($m[$i]);
            $x &= 0xffffffff;
        }
        return $x;
    }

}
